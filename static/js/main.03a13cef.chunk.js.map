{"version":3,"sources":["components/PassGenerator/PassGenerator.tsx","components/PassSelector/PassSelector.tsx","components/Passes/WorkPass.tsx","components/Passes/MedicalPass.tsx","components/Passes/OtherPass.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Field","PassSelector","onChange","useState","Object","keys","passes","active","setActive","className","entries","map","type","pass","key","classNames","onClick","name","work","id","FormPass","props","placeholder","maxLength","fields","PASSPORT_SERIES","PASSPORT_NUMBER","TROIKA","STRELKA","EMPLOYER_TAX_NUMBER","EMPLOYER_DESCRIPTION","medical","DATE_OF_BIRTH","other","DESTINATION","onSubmit","event","preventDefault","PassGenerator","state","setPassType","fieldsState","setFieldsState","Pass","values","target","value","field","join","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03a13cef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { MedicalPass, OtherPass, WorkPass } from \"../Passes\";\nimport { PassSelector } from \"../PassSelector\";\n\nenum Field {\n  PASSPORT_SERIES = \"passport-series\",\n  PASSPORT_NUMBER = \"passport-number\",\n  DATE_OF_BIRTH = \"date-of-birth\",\n  VEHICLE_NUMBER = \"vehicle-number\",\n  TROIKA = \"troika\",\n  STRELKA = \"strelka\",\n  EMPLOYER_TAX_NUMBER = \"employer-tax-number\",\n  EMPLOYER_DESCRIPTION = \"employer-description\",\n  DESTINATION = \"destination\",\n}\n\ninterface Pass {\n  id: number;\n  name: string;\n  FormPass: React.FunctionComponent<PassFormProps>;\n  fields: Field[];\n}\n\nexport const passes: Record<string, Pass> = {\n  work: {\n    id: 1,\n    name: \"Работа\",\n    FormPass: WorkPass,\n    fields: [\n      Field.PASSPORT_SERIES,\n      Field.PASSPORT_NUMBER,\n      Field.TROIKA,\n      Field.STRELKA,\n      Field.EMPLOYER_TAX_NUMBER,\n      Field.EMPLOYER_DESCRIPTION,\n    ],\n  },\n  medical: {\n    id: 2,\n    name: \"Медицина\",\n    FormPass: MedicalPass,\n    fields: [\n      Field.PASSPORT_SERIES,\n      Field.PASSPORT_NUMBER,\n      Field.DATE_OF_BIRTH,\n      Field.TROIKA,\n      Field.STRELKA,\n      Field.EMPLOYER_TAX_NUMBER,\n      Field.EMPLOYER_DESCRIPTION,\n    ],\n  },\n  other: {\n    id: 3,\n    name: \"Иные\",\n    FormPass: OtherPass,\n    fields: [Field.PASSPORT_SERIES, Field.PASSPORT_NUMBER, Field.DESTINATION],\n  },\n};\n\nfunction onSubmit(event: React.FormEvent<HTMLFormElement>) {\n  event.preventDefault();\n}\n\nexport function PassGenerator() {\n  const [type, setPassType] = useState<keyof typeof passes>(\"work\");\n  const [fieldsState, setFieldsState] = useState<Record<string, any>>({});\n\n  const Pass = passes[type].FormPass;\n\n  return (\n    <div>\n      <PassSelector\n        onChange={(type) => {\n          setPassType(type);\n        }}\n      />\n      <form onSubmit={onSubmit}>\n        <Pass\n          values={fieldsState}\n          onChange={(event: any) => {\n            setFieldsState({\n              ...fieldsState,\n              [event.target.name]: event.target.value,\n            });\n          }}\n        />\n        <br />\n        <div>{formatSMS(fieldsState, passes[type].fields)}</div>\n      </form>\n    </div>\n  );\n}\n\nfunction formatSMS(state: Record<string, any>, fields: Field[]) {\n  return \"Пропуск*\" + fields.map((field) => state[field]).join(\"*\");\n}\n\nexport interface PassFormProps {\n  values: Record<string, any>;\n  onChange: React.ChangeEventHandler<HTMLSelectElement | HTMLInputElement>;\n}\n","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { passes } from \"../PassGenerator\";\n\nimport \"./PassSelector.css\";\n\ninterface PassSelectorProps {\n  onChange: (type: keyof typeof passes) => void;\n}\n\nexport function PassSelector({ onChange }: PassSelectorProps) {\n  const [active, setActive] = useState(Object.keys(passes)[0]);\n\n  return (\n    <div className=\"PassSelector\">\n      <div className=\"PassSelector-label\">Тип пропуска</div>\n      <div className=\"PassSelector-tabs\">\n        {Object.entries(passes).map(([type, pass]) => {\n          return (\n            <div\n              key={type}\n              className={classNames(\"PassSelector-tab\", {\n                \"PassSelector-tab--active\": type === active,\n              })}\n              onClick={() => {\n                setActive(type);\n                onChange(type);\n              }}\n            >\n              {pass.name}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { PassFormProps } from \"../PassGenerator\";\n\nexport function WorkPass(props: PassFormProps) {\n  return (\n    <div className=\"Pass\">\n      <div className=\"Pass-field\">\n        <label className=\"Pass-label\">Паспорт</label>\n        <input\n          type=\"text\"\n          name=\"passport-series\"\n          placeholder=\"Серия\"\n          onChange={props.onChange}\n        />\n        <input\n          type=\"text\"\n          name=\"passport-number\"\n          placeholder=\"Номер\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"Pass-field\">\n        <label className=\"Pass-label\">Номер ТС</label>\n        <input\n          type=\"text\"\n          name=\"vehicle\"\n          placeholder=\"Номер\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"Pass-field\">\n        <label className=\"Pass-label\">Номер Тройки</label>\n        <input\n          type=\"text\"\n          name=\"troika\"\n          placeholder=\"Номер Тройки\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"Pass-field\">\n        <label className=\"Pass-label\">Номер Стрелки</label>\n        <input\n          type=\"text\"\n          name=\"strelka\"\n          placeholder=\"Номер Стрелки\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"Pass-field\">\n        <label className=\"Pass-label\">ИНН организации</label>\n        <input\n          type=\"text\"\n          name=\"employee-tax-number\"\n          placeholder=\"ИНН\"\n          maxLength={20}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"Pass-field\">\n        <label className=\"Pass-label\">Краткое наименование</label>\n        <input\n          type=\"text\"\n          name=\"employee-description\"\n          placeholder=\"Название\"\n          onChange={props.onChange}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { PassFormProps } from \"../PassGenerator\";\n\nexport function MedicalPass(props: PassFormProps) {\n  return (\n    <div className=\"Pass\">\n      <div>\n        <label>Паспорт</label>\n        <input\n          type=\"text\"\n          name=\"passport-series\"\n          placeholder=\"Серия\"\n          onChange={props.onChange}\n        />\n        <input\n          type=\"text\"\n          name=\"passport-number\"\n          placeholder=\"Номер\"\n          onChange={props.onChange}\n        />\n      </div>\n\n      <div>\n        <label>Дата рождения</label>\n        <input\n          type=\"text\"\n          name=\"vehicle\"\n          placeholder=\"Номер\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Номер ТС</label>\n        <input\n          type=\"text\"\n          name=\"vehicle\"\n          placeholder=\"Номер\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Номер Тройки</label>\n        <input\n          type=\"text\"\n          name=\"troika\"\n          placeholder=\"Номер Тройки\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Номер Стрелки</label>\n        <input\n          type=\"text\"\n          name=\"strelka\"\n          placeholder=\"Номер Стрелки\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Краткое наименование организации</label>\n        <input\n          type=\"text\"\n          name=\"aim-address\"\n          placeholder=\"Пункт назначения\"\n          onChange={props.onChange}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { PassFormProps } from \"../PassGenerator/PassGenerator\";\n\nexport function OtherPass(props: PassFormProps) {\n  return (\n    <div className=\"Pass\">\n      <div>\n        <label>Паспорт</label>\n        <input\n          type=\"text\"\n          name=\"passport-series\"\n          placeholder=\"Серия\"\n          onChange={props.onChange}\n        />\n        <input\n          type=\"text\"\n          name=\"passport-number\"\n          placeholder=\"Номер\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Номер ТС</label>\n        <input\n          type=\"text\"\n          name=\"vehicle\"\n          placeholder=\"Номер\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Номер Тройки</label>\n        <input\n          type=\"text\"\n          name=\"troika\"\n          placeholder=\"Номер Тройки\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Номер Стрелки</label>\n        <input\n          type=\"text\"\n          name=\"strelka\"\n          placeholder=\"Номер Стрелки\"\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Цель выхода</label>\n        <input\n          type=\"text\"\n          name=\"aim\"\n          placeholder=\"Цель выхода\"\n          maxLength={20}\n          onChange={props.onChange}\n        />\n      </div>\n      <div>\n        <label>Пункт назначения</label>\n        <input\n          type=\"text\"\n          name=\"aim-address\"\n          placeholder=\"Пункт назначения\"\n          onChange={props.onChange}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { PassGenerator } from \"../PassGenerator/PassGenerator\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <div className=\"App-page\">\n        <PassGenerator />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}